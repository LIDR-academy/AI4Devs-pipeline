name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/pipeline.yml'

jobs:
  build-test-deploy:
    name: Build, Test, and Deploy Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 'lts/*'

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-

    - name: Install dependencies
      working-directory: ./backend
      run: npm install

    - name: Run backend tests
      working-directory: ./backend
      run: npm test

    - name: Build backend
      working-directory: ./backend
      run: npm run build

    - name: Deploy to EC2
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOST_DNS: ${{ secrets.HOST_DNS }}
        TARGET_DIR: ${{ secrets.TARGET_DIR }}
        USERNAME: ${{ secrets.USERNAME }}
        NODE_ENV: production
      run: |
        # Setup SSH key
        echo "$EC2_SSH_KEY" > ec2_key.pem
        chmod 600 ec2_key.pem

        # Update and prepare EC2 instance
        ssh -i ec2_key.pem -o StrictHostKeyChecking=no $USERNAME@$HOST_DNS "
          # Update package list and install Node.js
          sudo yum update -y
          curl -sL https://rpm.nodesource.com/setup_lts.x | sudo bash -
          sudo yum install -y nodejs
          
          # Install PM2 globally
          sudo npm install -g pm2
          
          # Create deployment directory
          sudo mkdir -p $TARGET_DIR
          sudo chown $USERNAME:$USERNAME $TARGET_DIR
        "

        # Copy built files to EC2
        scp -i ec2_key.pem -o StrictHostKeyChecking=no -r backend/dist/* $USERNAME@$HOST_DNS:$TARGET_DIR/

        # Start/Restart application
        ssh -i ec2_key.pem -o StrictHostKeyChecking=no $USERNAME@$HOST_DNS "
          cd $TARGET_DIR && 
          npm ci --only=production && 
          echo 'NODE_ENV=${{ env.NODE_ENV }}' > .env &&
          pm2 restart ai4devs-backend || pm2 start npm --name 'ai4devs-backend' -- start
        "

    - name: Verify Deployment
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOST_DNS: ${{ secrets.HOST_DNS }}
        USERNAME: ${{ secrets.USERNAME }}
      run: |
        ssh -i ec2_key.pem -o StrictHostKeyChecking=no $USERNAME@$HOST_DNS "
          echo 'Node.js version:' && node --version &&
          echo 'PM2 version:' && pm2 --version &&
          if pm2 show ai4devs-backend | grep -q 'online'; then
            echo 'Deployment successful: Application is running'
            exit 0
          else
            echo 'Deployment failed: Application is not running'
            exit 1
          fi
        "